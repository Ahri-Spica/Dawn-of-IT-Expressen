#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IT_Expressen_Gruppe_5.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="2-sem-gr-5")]
	public partial class SQL_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertBruger(Bruger instance);
    partial void UpdateBruger(Bruger instance);
    partial void DeleteBruger(Bruger instance);
    partial void InsertEkspertiseOmråde(EkspertiseOmråde instance);
    partial void UpdateEkspertiseOmråde(EkspertiseOmråde instance);
    partial void DeleteEkspertiseOmråde(EkspertiseOmråde instance);
    partial void InsertFakture(Fakture instance);
    partial void UpdateFakture(Fakture instance);
    partial void DeleteFakture(Fakture instance);
    partial void InsertInvitation(Invitation instance);
    partial void UpdateInvitation(Invitation instance);
    partial void DeleteInvitation(Invitation instance);
    partial void InsertKodeSprog(KodeSprog instance);
    partial void UpdateKodeSprog(KodeSprog instance);
    partial void DeleteKodeSprog(KodeSprog instance);
    partial void Insertkonsulent(konsulent instance);
    partial void Updatekonsulent(konsulent instance);
    partial void Deletekonsulent(konsulent instance);
    partial void InsertKunde(Kunde instance);
    partial void UpdateKunde(Kunde instance);
    partial void DeleteKunde(Kunde instance);
    partial void InsertProjekt(Projekt instance);
    partial void UpdateProjekt(Projekt instance);
    partial void DeleteProjekt(Projekt instance);
    partial void Insertspecifikationer(specifikationer instance);
    partial void Updatespecifikationer(specifikationer instance);
    partial void Deletespecifikationer(specifikationer instance);
    partial void Insertsysdiagram(sysdiagram instance);
    partial void Updatesysdiagram(sysdiagram instance);
    partial void Deletesysdiagram(sysdiagram instance);
    partial void InsertTeknologi(Teknologi instance);
    partial void UpdateTeknologi(Teknologi instance);
    partial void DeleteTeknologi(Teknologi instance);
    #endregion
		
		public SQL_DBDataContext() : 
				base(global::IT_Expressen_Gruppe_5.Properties.Settings.Default._2_sem_gr_5ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Bruger> Brugers
		{
			get
			{
				return this.GetTable<Bruger>();
			}
		}
		
		public System.Data.Linq.Table<EkspertiseOmråde> EkspertiseOmrådes
		{
			get
			{
				return this.GetTable<EkspertiseOmråde>();
			}
		}
		
		public System.Data.Linq.Table<Fakture> Faktures
		{
			get
			{
				return this.GetTable<Fakture>();
			}
		}
		
		public System.Data.Linq.Table<Invitation> Invitations
		{
			get
			{
				return this.GetTable<Invitation>();
			}
		}
		
		public System.Data.Linq.Table<KodeSprog> KodeSprogs
		{
			get
			{
				return this.GetTable<KodeSprog>();
			}
		}
		
		public System.Data.Linq.Table<konsulent> konsulents
		{
			get
			{
				return this.GetTable<konsulent>();
			}
		}
		
		public System.Data.Linq.Table<Kunde> Kundes
		{
			get
			{
				return this.GetTable<Kunde>();
			}
		}
		
		public System.Data.Linq.Table<Projekt> Projekts
		{
			get
			{
				return this.GetTable<Projekt>();
			}
		}
		
		public System.Data.Linq.Table<specifikationer> specifikationers
		{
			get
			{
				return this.GetTable<specifikationer>();
			}
		}
		
		public System.Data.Linq.Table<sysdiagram> sysdiagrams
		{
			get
			{
				return this.GetTable<sysdiagram>();
			}
		}
		
		public System.Data.Linq.Table<Teknologi> Teknologis
		{
			get
			{
				return this.GetTable<Teknologi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Admin_Id;
		
		private System.Nullable<int> _Bruger_Id;
		
		private EntityRef<Bruger> _Bruger;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmin_IdChanging(int value);
    partial void OnAdmin_IdChanged();
    partial void OnBruger_IdChanging(System.Nullable<int> value);
    partial void OnBruger_IdChanged();
    #endregion
		
		public Admin()
		{
			this._Bruger = default(EntityRef<Bruger>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Admin_Id
		{
			get
			{
				return this._Admin_Id;
			}
			set
			{
				if ((this._Admin_Id != value))
				{
					this.OnAdmin_IdChanging(value);
					this.SendPropertyChanging();
					this._Admin_Id = value;
					this.SendPropertyChanged("Admin_Id");
					this.OnAdmin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bruger_Id", DbType="Int")]
		public System.Nullable<int> Bruger_Id
		{
			get
			{
				return this._Bruger_Id;
			}
			set
			{
				if ((this._Bruger_Id != value))
				{
					if (this._Bruger.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBruger_IdChanging(value);
					this.SendPropertyChanging();
					this._Bruger_Id = value;
					this.SendPropertyChanged("Bruger_Id");
					this.OnBruger_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bruger_Admin", Storage="_Bruger", ThisKey="Bruger_Id", OtherKey="Bruger_Id", IsForeignKey=true)]
		public Bruger Bruger
		{
			get
			{
				return this._Bruger.Entity;
			}
			set
			{
				Bruger previousValue = this._Bruger.Entity;
				if (((previousValue != value) 
							|| (this._Bruger.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bruger.Entity = null;
						previousValue.Admins.Remove(this);
					}
					this._Bruger.Entity = value;
					if ((value != null))
					{
						value.Admins.Add(this);
						this._Bruger_Id = value.Bruger_Id;
					}
					else
					{
						this._Bruger_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bruger");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bruger")]
	public partial class Bruger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bruger_Id;
		
		private string _Navn;
		
		private string _Adresse;
		
		private System.Nullable<int> _TelefoneNr;
		
		private EntitySet<Admin> _Admins;
		
		private EntitySet<konsulent> _konsulents;
		
		private EntitySet<Kunde> _Kundes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBruger_IdChanging(int value);
    partial void OnBruger_IdChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnTelefoneNrChanging(System.Nullable<int> value);
    partial void OnTelefoneNrChanged();
    #endregion
		
		public Bruger()
		{
			this._Admins = new EntitySet<Admin>(new Action<Admin>(this.attach_Admins), new Action<Admin>(this.detach_Admins));
			this._konsulents = new EntitySet<konsulent>(new Action<konsulent>(this.attach_konsulents), new Action<konsulent>(this.detach_konsulents));
			this._Kundes = new EntitySet<Kunde>(new Action<Kunde>(this.attach_Kundes), new Action<Kunde>(this.detach_Kundes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bruger_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bruger_Id
		{
			get
			{
				return this._Bruger_Id;
			}
			set
			{
				if ((this._Bruger_Id != value))
				{
					this.OnBruger_IdChanging(value);
					this.SendPropertyChanging();
					this._Bruger_Id = value;
					this.SendPropertyChanged("Bruger_Id");
					this.OnBruger_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Navn", DbType="VarChar(20)")]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this.OnNavnChanging(value);
					this.SendPropertyChanging();
					this._Navn = value;
					this.SendPropertyChanged("Navn");
					this.OnNavnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(50)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefoneNr", DbType="Int")]
		public System.Nullable<int> TelefoneNr
		{
			get
			{
				return this._TelefoneNr;
			}
			set
			{
				if ((this._TelefoneNr != value))
				{
					this.OnTelefoneNrChanging(value);
					this.SendPropertyChanging();
					this._TelefoneNr = value;
					this.SendPropertyChanged("TelefoneNr");
					this.OnTelefoneNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bruger_Admin", Storage="_Admins", ThisKey="Bruger_Id", OtherKey="Bruger_Id")]
		public EntitySet<Admin> Admins
		{
			get
			{
				return this._Admins;
			}
			set
			{
				this._Admins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bruger_konsulent", Storage="_konsulents", ThisKey="Bruger_Id", OtherKey="bruger_Id")]
		public EntitySet<konsulent> konsulents
		{
			get
			{
				return this._konsulents;
			}
			set
			{
				this._konsulents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bruger_Kunde", Storage="_Kundes", ThisKey="Bruger_Id", OtherKey="Bruger_Id")]
		public EntitySet<Kunde> Kundes
		{
			get
			{
				return this._Kundes;
			}
			set
			{
				this._Kundes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Bruger = this;
		}
		
		private void detach_Admins(Admin entity)
		{
			this.SendPropertyChanging();
			entity.Bruger = null;
		}
		
		private void attach_konsulents(konsulent entity)
		{
			this.SendPropertyChanging();
			entity.Bruger = this;
		}
		
		private void detach_konsulents(konsulent entity)
		{
			this.SendPropertyChanging();
			entity.Bruger = null;
		}
		
		private void attach_Kundes(Kunde entity)
		{
			this.SendPropertyChanging();
			entity.Bruger = this;
		}
		
		private void detach_Kundes(Kunde entity)
		{
			this.SendPropertyChanging();
			entity.Bruger = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EkspertiseOmråde")]
	public partial class EkspertiseOmråde : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EkspertiseOmrådeId;
		
		private string _område;
		
		private EntitySet<specifikationer> _specifikationers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEkspertiseOmrådeIdChanging(int value);
    partial void OnEkspertiseOmrådeIdChanged();
    partial void OnområdeChanging(string value);
    partial void OnområdeChanged();
    #endregion
		
		public EkspertiseOmråde()
		{
			this._specifikationers = new EntitySet<specifikationer>(new Action<specifikationer>(this.attach_specifikationers), new Action<specifikationer>(this.detach_specifikationers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EkspertiseOmrådeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EkspertiseOmrådeId
		{
			get
			{
				return this._EkspertiseOmrådeId;
			}
			set
			{
				if ((this._EkspertiseOmrådeId != value))
				{
					this.OnEkspertiseOmrådeIdChanging(value);
					this.SendPropertyChanging();
					this._EkspertiseOmrådeId = value;
					this.SendPropertyChanged("EkspertiseOmrådeId");
					this.OnEkspertiseOmrådeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_område", DbType="VarChar(MAX)")]
		public string område
		{
			get
			{
				return this._område;
			}
			set
			{
				if ((this._område != value))
				{
					this.OnområdeChanging(value);
					this.SendPropertyChanging();
					this._område = value;
					this.SendPropertyChanged("område");
					this.OnområdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EkspertiseOmråde_specifikationer", Storage="_specifikationers", ThisKey="EkspertiseOmrådeId", OtherKey="ekspertiseområdeID")]
		public EntitySet<specifikationer> specifikationers
		{
			get
			{
				return this._specifikationers;
			}
			set
			{
				this._specifikationers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_specifikationers(specifikationer entity)
		{
			this.SendPropertyChanging();
			entity.EkspertiseOmråde = this;
		}
		
		private void detach_specifikationers(specifikationer entity)
		{
			this.SendPropertyChanging();
			entity.EkspertiseOmråde = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fakture")]
	public partial class Fakture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Fakture_Id;
		
		private System.Nullable<int> _Projekt_Id;
		
		private System.Nullable<int> _Konsulent_Id;
		
		private System.Nullable<decimal> _Timeløn;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<System.DateTime> _Dato;
		
		private System.Nullable<int> _Antal_Timer;
		
		private string _Instalationer;
		
		private EntityRef<konsulent> _konsulent;
		
		private EntityRef<Projekt> _Projekt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFakture_IdChanging(int value);
    partial void OnFakture_IdChanged();
    partial void OnProjekt_IdChanging(System.Nullable<int> value);
    partial void OnProjekt_IdChanged();
    partial void OnKonsulent_IdChanging(System.Nullable<int> value);
    partial void OnKonsulent_IdChanged();
    partial void OnTimelønChanging(System.Nullable<decimal> value);
    partial void OnTimelønChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnDatoChanging(System.Nullable<System.DateTime> value);
    partial void OnDatoChanged();
    partial void OnAntal_TimerChanging(System.Nullable<int> value);
    partial void OnAntal_TimerChanged();
    partial void OnInstalationerChanging(string value);
    partial void OnInstalationerChanged();
    #endregion
		
		public Fakture()
		{
			this._konsulent = default(EntityRef<konsulent>);
			this._Projekt = default(EntityRef<Projekt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fakture_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Fakture_Id
		{
			get
			{
				return this._Fakture_Id;
			}
			set
			{
				if ((this._Fakture_Id != value))
				{
					this.OnFakture_IdChanging(value);
					this.SendPropertyChanging();
					this._Fakture_Id = value;
					this.SendPropertyChanged("Fakture_Id");
					this.OnFakture_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int")]
		public System.Nullable<int> Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					if (this._Projekt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konsulent_Id", DbType="Int")]
		public System.Nullable<int> Konsulent_Id
		{
			get
			{
				return this._Konsulent_Id;
			}
			set
			{
				if ((this._Konsulent_Id != value))
				{
					if (this._konsulent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKonsulent_IdChanging(value);
					this.SendPropertyChanging();
					this._Konsulent_Id = value;
					this.SendPropertyChanged("Konsulent_Id");
					this.OnKonsulent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeløn", DbType="Money")]
		public System.Nullable<decimal> Timeløn
		{
			get
			{
				return this._Timeløn;
			}
			set
			{
				if ((this._Timeløn != value))
				{
					this.OnTimelønChanging(value);
					this.SendPropertyChanging();
					this._Timeløn = value;
					this.SendPropertyChanged("Timeløn");
					this.OnTimelønChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dato", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dato
		{
			get
			{
				return this._Dato;
			}
			set
			{
				if ((this._Dato != value))
				{
					this.OnDatoChanging(value);
					this.SendPropertyChanging();
					this._Dato = value;
					this.SendPropertyChanged("Dato");
					this.OnDatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Antal_Timer", DbType="Int")]
		public System.Nullable<int> Antal_Timer
		{
			get
			{
				return this._Antal_Timer;
			}
			set
			{
				if ((this._Antal_Timer != value))
				{
					this.OnAntal_TimerChanging(value);
					this.SendPropertyChanging();
					this._Antal_Timer = value;
					this.SendPropertyChanged("Antal_Timer");
					this.OnAntal_TimerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instalationer", DbType="VarChar(MAX)")]
		public string Instalationer
		{
			get
			{
				return this._Instalationer;
			}
			set
			{
				if ((this._Instalationer != value))
				{
					this.OnInstalationerChanging(value);
					this.SendPropertyChanging();
					this._Instalationer = value;
					this.SendPropertyChanged("Instalationer");
					this.OnInstalationerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="konsulent_Fakture", Storage="_konsulent", ThisKey="Konsulent_Id", OtherKey="Konsulent_Id", IsForeignKey=true)]
		public konsulent konsulent
		{
			get
			{
				return this._konsulent.Entity;
			}
			set
			{
				konsulent previousValue = this._konsulent.Entity;
				if (((previousValue != value) 
							|| (this._konsulent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._konsulent.Entity = null;
						previousValue.Faktures.Remove(this);
					}
					this._konsulent.Entity = value;
					if ((value != null))
					{
						value.Faktures.Add(this);
						this._Konsulent_Id = value.Konsulent_Id;
					}
					else
					{
						this._Konsulent_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("konsulent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projekt_Fakture", Storage="_Projekt", ThisKey="Projekt_Id", OtherKey="Projekt_Id", IsForeignKey=true)]
		public Projekt Projekt
		{
			get
			{
				return this._Projekt.Entity;
			}
			set
			{
				Projekt previousValue = this._Projekt.Entity;
				if (((previousValue != value) 
							|| (this._Projekt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projekt.Entity = null;
						previousValue.Faktures.Remove(this);
					}
					this._Projekt.Entity = value;
					if ((value != null))
					{
						value.Faktures.Add(this);
						this._Projekt_Id = value.Projekt_Id;
					}
					else
					{
						this._Projekt_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Projekt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invitation")]
	public partial class Invitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invitation_Id;
		
		private System.Nullable<int> _Projekt_Id;
		
		private System.Nullable<int> _Kunde_Id;
		
		private System.Nullable<int> _Konsulent_Id;
		
		private EntityRef<konsulent> _konsulent;
		
		private EntityRef<Kunde> _Kunde;
		
		private EntityRef<Projekt> _Projekt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvitation_IdChanging(int value);
    partial void OnInvitation_IdChanged();
    partial void OnProjekt_IdChanging(System.Nullable<int> value);
    partial void OnProjekt_IdChanged();
    partial void OnKunde_IdChanging(System.Nullable<int> value);
    partial void OnKunde_IdChanged();
    partial void OnKonsulent_IdChanging(System.Nullable<int> value);
    partial void OnKonsulent_IdChanged();
    #endregion
		
		public Invitation()
		{
			this._konsulent = default(EntityRef<konsulent>);
			this._Kunde = default(EntityRef<Kunde>);
			this._Projekt = default(EntityRef<Projekt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invitation_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Invitation_Id
		{
			get
			{
				return this._Invitation_Id;
			}
			set
			{
				if ((this._Invitation_Id != value))
				{
					this.OnInvitation_IdChanging(value);
					this.SendPropertyChanging();
					this._Invitation_Id = value;
					this.SendPropertyChanged("Invitation_Id");
					this.OnInvitation_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int")]
		public System.Nullable<int> Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					if (this._Projekt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kunde_Id", DbType="Int")]
		public System.Nullable<int> Kunde_Id
		{
			get
			{
				return this._Kunde_Id;
			}
			set
			{
				if ((this._Kunde_Id != value))
				{
					if (this._Kunde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKunde_IdChanging(value);
					this.SendPropertyChanging();
					this._Kunde_Id = value;
					this.SendPropertyChanged("Kunde_Id");
					this.OnKunde_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konsulent_Id", DbType="Int")]
		public System.Nullable<int> Konsulent_Id
		{
			get
			{
				return this._Konsulent_Id;
			}
			set
			{
				if ((this._Konsulent_Id != value))
				{
					if (this._konsulent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKonsulent_IdChanging(value);
					this.SendPropertyChanging();
					this._Konsulent_Id = value;
					this.SendPropertyChanged("Konsulent_Id");
					this.OnKonsulent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="konsulent_Invitation", Storage="_konsulent", ThisKey="Konsulent_Id", OtherKey="Konsulent_Id", IsForeignKey=true)]
		public konsulent konsulent
		{
			get
			{
				return this._konsulent.Entity;
			}
			set
			{
				konsulent previousValue = this._konsulent.Entity;
				if (((previousValue != value) 
							|| (this._konsulent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._konsulent.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._konsulent.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._Konsulent_Id = value.Konsulent_Id;
					}
					else
					{
						this._Konsulent_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("konsulent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Invitation", Storage="_Kunde", ThisKey="Kunde_Id", OtherKey="Kunde_Id", IsForeignKey=true)]
		public Kunde Kunde
		{
			get
			{
				return this._Kunde.Entity;
			}
			set
			{
				Kunde previousValue = this._Kunde.Entity;
				if (((previousValue != value) 
							|| (this._Kunde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunde.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._Kunde.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._Kunde_Id = value.Kunde_Id;
					}
					else
					{
						this._Kunde_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kunde");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projekt_Invitation", Storage="_Projekt", ThisKey="Projekt_Id", OtherKey="Projekt_Id", IsForeignKey=true)]
		public Projekt Projekt
		{
			get
			{
				return this._Projekt.Entity;
			}
			set
			{
				Projekt previousValue = this._Projekt.Entity;
				if (((previousValue != value) 
							|| (this._Projekt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Projekt.Entity = null;
						previousValue.Invitations.Remove(this);
					}
					this._Projekt.Entity = value;
					if ((value != null))
					{
						value.Invitations.Add(this);
						this._Projekt_Id = value.Projekt_Id;
					}
					else
					{
						this._Projekt_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Projekt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KodeSprog")]
	public partial class KodeSprog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KodeSprogID;
		
		private string _sprog;
		
		private EntitySet<specifikationer> _specifikationers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKodeSprogIDChanging(int value);
    partial void OnKodeSprogIDChanged();
    partial void OnsprogChanging(string value);
    partial void OnsprogChanged();
    #endregion
		
		public KodeSprog()
		{
			this._specifikationers = new EntitySet<specifikationer>(new Action<specifikationer>(this.attach_specifikationers), new Action<specifikationer>(this.detach_specifikationers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KodeSprogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KodeSprogID
		{
			get
			{
				return this._KodeSprogID;
			}
			set
			{
				if ((this._KodeSprogID != value))
				{
					this.OnKodeSprogIDChanging(value);
					this.SendPropertyChanging();
					this._KodeSprogID = value;
					this.SendPropertyChanged("KodeSprogID");
					this.OnKodeSprogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sprog", DbType="VarChar(MAX)")]
		public string sprog
		{
			get
			{
				return this._sprog;
			}
			set
			{
				if ((this._sprog != value))
				{
					this.OnsprogChanging(value);
					this.SendPropertyChanging();
					this._sprog = value;
					this.SendPropertyChanged("sprog");
					this.OnsprogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KodeSprog_specifikationer", Storage="_specifikationers", ThisKey="KodeSprogID", OtherKey="kodesprogID")]
		public EntitySet<specifikationer> specifikationers
		{
			get
			{
				return this._specifikationers;
			}
			set
			{
				this._specifikationers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_specifikationers(specifikationer entity)
		{
			this.SendPropertyChanging();
			entity.KodeSprog = this;
		}
		
		private void detach_specifikationers(specifikationer entity)
		{
			this.SendPropertyChanging();
			entity.KodeSprog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.konsulent")]
	public partial class konsulent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Konsulent_Id;
		
		private System.Nullable<int> _bruger_Id;
		
		private System.Nullable<int> _SpecifikationerID;
		
		private EntitySet<Fakture> _Faktures;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<Projekt> _Projekts;
		
		private EntityRef<Bruger> _Bruger;
		
		private EntityRef<specifikationer> _specifikationer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKonsulent_IdChanging(int value);
    partial void OnKonsulent_IdChanged();
    partial void Onbruger_IdChanging(System.Nullable<int> value);
    partial void Onbruger_IdChanged();
    partial void OnSpecifikationerIDChanging(System.Nullable<int> value);
    partial void OnSpecifikationerIDChanged();
    #endregion
		
		public konsulent()
		{
			this._Faktures = new EntitySet<Fakture>(new Action<Fakture>(this.attach_Faktures), new Action<Fakture>(this.detach_Faktures));
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._Projekts = new EntitySet<Projekt>(new Action<Projekt>(this.attach_Projekts), new Action<Projekt>(this.detach_Projekts));
			this._Bruger = default(EntityRef<Bruger>);
			this._specifikationer = default(EntityRef<specifikationer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konsulent_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Konsulent_Id
		{
			get
			{
				return this._Konsulent_Id;
			}
			set
			{
				if ((this._Konsulent_Id != value))
				{
					this.OnKonsulent_IdChanging(value);
					this.SendPropertyChanging();
					this._Konsulent_Id = value;
					this.SendPropertyChanged("Konsulent_Id");
					this.OnKonsulent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bruger_Id", DbType="Int")]
		public System.Nullable<int> bruger_Id
		{
			get
			{
				return this._bruger_Id;
			}
			set
			{
				if ((this._bruger_Id != value))
				{
					if (this._Bruger.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbruger_IdChanging(value);
					this.SendPropertyChanging();
					this._bruger_Id = value;
					this.SendPropertyChanged("bruger_Id");
					this.Onbruger_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecifikationerID", DbType="Int")]
		public System.Nullable<int> SpecifikationerID
		{
			get
			{
				return this._SpecifikationerID;
			}
			set
			{
				if ((this._SpecifikationerID != value))
				{
					if (this._specifikationer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecifikationerIDChanging(value);
					this.SendPropertyChanging();
					this._SpecifikationerID = value;
					this.SendPropertyChanged("SpecifikationerID");
					this.OnSpecifikationerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="konsulent_Fakture", Storage="_Faktures", ThisKey="Konsulent_Id", OtherKey="Konsulent_Id")]
		public EntitySet<Fakture> Faktures
		{
			get
			{
				return this._Faktures;
			}
			set
			{
				this._Faktures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="konsulent_Invitation", Storage="_Invitations", ThisKey="Konsulent_Id", OtherKey="Konsulent_Id")]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="konsulent_Projekt", Storage="_Projekts", ThisKey="Konsulent_Id", OtherKey="Konsulent_Id")]
		public EntitySet<Projekt> Projekts
		{
			get
			{
				return this._Projekts;
			}
			set
			{
				this._Projekts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bruger_konsulent", Storage="_Bruger", ThisKey="bruger_Id", OtherKey="Bruger_Id", IsForeignKey=true)]
		public Bruger Bruger
		{
			get
			{
				return this._Bruger.Entity;
			}
			set
			{
				Bruger previousValue = this._Bruger.Entity;
				if (((previousValue != value) 
							|| (this._Bruger.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bruger.Entity = null;
						previousValue.konsulents.Remove(this);
					}
					this._Bruger.Entity = value;
					if ((value != null))
					{
						value.konsulents.Add(this);
						this._bruger_Id = value.Bruger_Id;
					}
					else
					{
						this._bruger_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bruger");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="specifikationer_konsulent", Storage="_specifikationer", ThisKey="SpecifikationerID", OtherKey="SpecifikationerID", IsForeignKey=true)]
		public specifikationer specifikationer
		{
			get
			{
				return this._specifikationer.Entity;
			}
			set
			{
				specifikationer previousValue = this._specifikationer.Entity;
				if (((previousValue != value) 
							|| (this._specifikationer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._specifikationer.Entity = null;
						previousValue.konsulents.Remove(this);
					}
					this._specifikationer.Entity = value;
					if ((value != null))
					{
						value.konsulents.Add(this);
						this._SpecifikationerID = value.SpecifikationerID;
					}
					else
					{
						this._SpecifikationerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("specifikationer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Faktures(Fakture entity)
		{
			this.SendPropertyChanging();
			entity.konsulent = this;
		}
		
		private void detach_Faktures(Fakture entity)
		{
			this.SendPropertyChanging();
			entity.konsulent = null;
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.konsulent = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.konsulent = null;
		}
		
		private void attach_Projekts(Projekt entity)
		{
			this.SendPropertyChanging();
			entity.konsulent = this;
		}
		
		private void detach_Projekts(Projekt entity)
		{
			this.SendPropertyChanging();
			entity.konsulent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kunde")]
	public partial class Kunde : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kunde_Id;
		
		private System.Nullable<int> _Bruger_Id;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntitySet<Projekt> _Projekts;
		
		private EntityRef<Bruger> _Bruger;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKunde_IdChanging(int value);
    partial void OnKunde_IdChanged();
    partial void OnBruger_IdChanging(System.Nullable<int> value);
    partial void OnBruger_IdChanged();
    #endregion
		
		public Kunde()
		{
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._Projekts = new EntitySet<Projekt>(new Action<Projekt>(this.attach_Projekts), new Action<Projekt>(this.detach_Projekts));
			this._Bruger = default(EntityRef<Bruger>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kunde_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Kunde_Id
		{
			get
			{
				return this._Kunde_Id;
			}
			set
			{
				if ((this._Kunde_Id != value))
				{
					this.OnKunde_IdChanging(value);
					this.SendPropertyChanging();
					this._Kunde_Id = value;
					this.SendPropertyChanged("Kunde_Id");
					this.OnKunde_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bruger_Id", DbType="Int")]
		public System.Nullable<int> Bruger_Id
		{
			get
			{
				return this._Bruger_Id;
			}
			set
			{
				if ((this._Bruger_Id != value))
				{
					if (this._Bruger.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBruger_IdChanging(value);
					this.SendPropertyChanging();
					this._Bruger_Id = value;
					this.SendPropertyChanged("Bruger_Id");
					this.OnBruger_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Invitation", Storage="_Invitations", ThisKey="Kunde_Id", OtherKey="Kunde_Id")]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Projekt", Storage="_Projekts", ThisKey="Kunde_Id", OtherKey="Kunde_id")]
		public EntitySet<Projekt> Projekts
		{
			get
			{
				return this._Projekts;
			}
			set
			{
				this._Projekts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bruger_Kunde", Storage="_Bruger", ThisKey="Bruger_Id", OtherKey="Bruger_Id", IsForeignKey=true)]
		public Bruger Bruger
		{
			get
			{
				return this._Bruger.Entity;
			}
			set
			{
				Bruger previousValue = this._Bruger.Entity;
				if (((previousValue != value) 
							|| (this._Bruger.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bruger.Entity = null;
						previousValue.Kundes.Remove(this);
					}
					this._Bruger.Entity = value;
					if ((value != null))
					{
						value.Kundes.Add(this);
						this._Bruger_Id = value.Bruger_Id;
					}
					else
					{
						this._Bruger_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bruger");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = null;
		}
		
		private void attach_Projekts(Projekt entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = this;
		}
		
		private void detach_Projekts(Projekt entity)
		{
			this.SendPropertyChanging();
			entity.Kunde = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projekt")]
	public partial class Projekt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Projekt_Id;
		
		private System.Nullable<int> _Kunde_id;
		
		private System.Nullable<int> _Konsulent_Id;
		
		private string _Navn;
		
		private System.Nullable<System.DateTime> _StartDato;
		
		private string _Beskrivelse;
		
		private string _krav;
		
		private System.Nullable<int> _ProjektStatus;
		
		private System.Nullable<System.DateTime> _Timeopgørelse;
		
		private string _chat;
		
		private System.Nullable<System.DateTime> _SlutDato;
		
		private EntitySet<Fakture> _Faktures;
		
		private EntitySet<Invitation> _Invitations;
		
		private EntityRef<konsulent> _konsulent;
		
		private EntityRef<Kunde> _Kunde;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjekt_IdChanging(int value);
    partial void OnProjekt_IdChanged();
    partial void OnKunde_idChanging(System.Nullable<int> value);
    partial void OnKunde_idChanged();
    partial void OnKonsulent_IdChanging(System.Nullable<int> value);
    partial void OnKonsulent_IdChanged();
    partial void OnNavnChanging(string value);
    partial void OnNavnChanged();
    partial void OnStartDatoChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDatoChanged();
    partial void OnBeskrivelseChanging(string value);
    partial void OnBeskrivelseChanged();
    partial void OnkravChanging(string value);
    partial void OnkravChanged();
    partial void OnProjektStatusChanging(System.Nullable<int> value);
    partial void OnProjektStatusChanged();
    partial void OnTimeopgørelseChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeopgørelseChanged();
    partial void OnchatChanging(string value);
    partial void OnchatChanged();
    partial void OnSlutDatoChanging(System.Nullable<System.DateTime> value);
    partial void OnSlutDatoChanged();
    #endregion
		
		public Projekt()
		{
			this._Faktures = new EntitySet<Fakture>(new Action<Fakture>(this.attach_Faktures), new Action<Fakture>(this.detach_Faktures));
			this._Invitations = new EntitySet<Invitation>(new Action<Invitation>(this.attach_Invitations), new Action<Invitation>(this.detach_Invitations));
			this._konsulent = default(EntityRef<konsulent>);
			this._Kunde = default(EntityRef<Kunde>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kunde_id", DbType="Int")]
		public System.Nullable<int> Kunde_id
		{
			get
			{
				return this._Kunde_id;
			}
			set
			{
				if ((this._Kunde_id != value))
				{
					if (this._Kunde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKunde_idChanging(value);
					this.SendPropertyChanging();
					this._Kunde_id = value;
					this.SendPropertyChanged("Kunde_id");
					this.OnKunde_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konsulent_Id", DbType="Int")]
		public System.Nullable<int> Konsulent_Id
		{
			get
			{
				return this._Konsulent_Id;
			}
			set
			{
				if ((this._Konsulent_Id != value))
				{
					if (this._konsulent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKonsulent_IdChanging(value);
					this.SendPropertyChanging();
					this._Konsulent_Id = value;
					this.SendPropertyChanged("Konsulent_Id");
					this.OnKonsulent_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Navn", DbType="VarChar(50)")]
		public string Navn
		{
			get
			{
				return this._Navn;
			}
			set
			{
				if ((this._Navn != value))
				{
					this.OnNavnChanging(value);
					this.SendPropertyChanging();
					this._Navn = value;
					this.SendPropertyChanged("Navn");
					this.OnNavnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDato", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDato
		{
			get
			{
				return this._StartDato;
			}
			set
			{
				if ((this._StartDato != value))
				{
					this.OnStartDatoChanging(value);
					this.SendPropertyChanging();
					this._StartDato = value;
					this.SendPropertyChanged("StartDato");
					this.OnStartDatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beskrivelse", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Beskrivelse
		{
			get
			{
				return this._Beskrivelse;
			}
			set
			{
				if ((this._Beskrivelse != value))
				{
					this.OnBeskrivelseChanging(value);
					this.SendPropertyChanging();
					this._Beskrivelse = value;
					this.SendPropertyChanged("Beskrivelse");
					this.OnBeskrivelseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_krav", DbType="VarChar(MAX)")]
		public string krav
		{
			get
			{
				return this._krav;
			}
			set
			{
				if ((this._krav != value))
				{
					this.OnkravChanging(value);
					this.SendPropertyChanging();
					this._krav = value;
					this.SendPropertyChanged("krav");
					this.OnkravChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjektStatus", DbType="Int")]
		public System.Nullable<int> ProjektStatus
		{
			get
			{
				return this._ProjektStatus;
			}
			set
			{
				if ((this._ProjektStatus != value))
				{
					this.OnProjektStatusChanging(value);
					this.SendPropertyChanging();
					this._ProjektStatus = value;
					this.SendPropertyChanged("ProjektStatus");
					this.OnProjektStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeopgørelse", DbType="DateTime")]
		public System.Nullable<System.DateTime> Timeopgørelse
		{
			get
			{
				return this._Timeopgørelse;
			}
			set
			{
				if ((this._Timeopgørelse != value))
				{
					this.OnTimeopgørelseChanging(value);
					this.SendPropertyChanging();
					this._Timeopgørelse = value;
					this.SendPropertyChanged("Timeopgørelse");
					this.OnTimeopgørelseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chat", DbType="VarChar(MAX)")]
		public string chat
		{
			get
			{
				return this._chat;
			}
			set
			{
				if ((this._chat != value))
				{
					this.OnchatChanging(value);
					this.SendPropertyChanging();
					this._chat = value;
					this.SendPropertyChanged("chat");
					this.OnchatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlutDato", DbType="DateTime")]
		public System.Nullable<System.DateTime> SlutDato
		{
			get
			{
				return this._SlutDato;
			}
			set
			{
				if ((this._SlutDato != value))
				{
					this.OnSlutDatoChanging(value);
					this.SendPropertyChanging();
					this._SlutDato = value;
					this.SendPropertyChanged("SlutDato");
					this.OnSlutDatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projekt_Fakture", Storage="_Faktures", ThisKey="Projekt_Id", OtherKey="Projekt_Id")]
		public EntitySet<Fakture> Faktures
		{
			get
			{
				return this._Faktures;
			}
			set
			{
				this._Faktures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Projekt_Invitation", Storage="_Invitations", ThisKey="Projekt_Id", OtherKey="Projekt_Id")]
		public EntitySet<Invitation> Invitations
		{
			get
			{
				return this._Invitations;
			}
			set
			{
				this._Invitations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="konsulent_Projekt", Storage="_konsulent", ThisKey="Konsulent_Id", OtherKey="Konsulent_Id", IsForeignKey=true)]
		public konsulent konsulent
		{
			get
			{
				return this._konsulent.Entity;
			}
			set
			{
				konsulent previousValue = this._konsulent.Entity;
				if (((previousValue != value) 
							|| (this._konsulent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._konsulent.Entity = null;
						previousValue.Projekts.Remove(this);
					}
					this._konsulent.Entity = value;
					if ((value != null))
					{
						value.Projekts.Add(this);
						this._Konsulent_Id = value.Konsulent_Id;
					}
					else
					{
						this._Konsulent_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("konsulent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunde_Projekt", Storage="_Kunde", ThisKey="Kunde_id", OtherKey="Kunde_Id", IsForeignKey=true)]
		public Kunde Kunde
		{
			get
			{
				return this._Kunde.Entity;
			}
			set
			{
				Kunde previousValue = this._Kunde.Entity;
				if (((previousValue != value) 
							|| (this._Kunde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunde.Entity = null;
						previousValue.Projekts.Remove(this);
					}
					this._Kunde.Entity = value;
					if ((value != null))
					{
						value.Projekts.Add(this);
						this._Kunde_id = value.Kunde_Id;
					}
					else
					{
						this._Kunde_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kunde");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Faktures(Fakture entity)
		{
			this.SendPropertyChanging();
			entity.Projekt = this;
		}
		
		private void detach_Faktures(Fakture entity)
		{
			this.SendPropertyChanging();
			entity.Projekt = null;
		}
		
		private void attach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Projekt = this;
		}
		
		private void detach_Invitations(Invitation entity)
		{
			this.SendPropertyChanging();
			entity.Projekt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.specifikationer")]
	public partial class specifikationer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecifikationerID;
		
		private System.Nullable<int> _ekspertiseområdeID;
		
		private System.Nullable<int> _teknologiID;
		
		private System.Nullable<int> _kodesprogID;
		
		private EntitySet<konsulent> _konsulents;
		
		private EntityRef<EkspertiseOmråde> _EkspertiseOmråde;
		
		private EntityRef<KodeSprog> _KodeSprog;
		
		private EntityRef<Teknologi> _Teknologi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecifikationerIDChanging(int value);
    partial void OnSpecifikationerIDChanged();
    partial void OnekspertiseområdeIDChanging(System.Nullable<int> value);
    partial void OnekspertiseområdeIDChanged();
    partial void OnteknologiIDChanging(System.Nullable<int> value);
    partial void OnteknologiIDChanged();
    partial void OnkodesprogIDChanging(System.Nullable<int> value);
    partial void OnkodesprogIDChanged();
    #endregion
		
		public specifikationer()
		{
			this._konsulents = new EntitySet<konsulent>(new Action<konsulent>(this.attach_konsulents), new Action<konsulent>(this.detach_konsulents));
			this._EkspertiseOmråde = default(EntityRef<EkspertiseOmråde>);
			this._KodeSprog = default(EntityRef<KodeSprog>);
			this._Teknologi = default(EntityRef<Teknologi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecifikationerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SpecifikationerID
		{
			get
			{
				return this._SpecifikationerID;
			}
			set
			{
				if ((this._SpecifikationerID != value))
				{
					this.OnSpecifikationerIDChanging(value);
					this.SendPropertyChanging();
					this._SpecifikationerID = value;
					this.SendPropertyChanged("SpecifikationerID");
					this.OnSpecifikationerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ekspertiseområdeID", DbType="Int")]
		public System.Nullable<int> ekspertiseområdeID
		{
			get
			{
				return this._ekspertiseområdeID;
			}
			set
			{
				if ((this._ekspertiseområdeID != value))
				{
					if (this._EkspertiseOmråde.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnekspertiseområdeIDChanging(value);
					this.SendPropertyChanging();
					this._ekspertiseområdeID = value;
					this.SendPropertyChanged("ekspertiseområdeID");
					this.OnekspertiseområdeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teknologiID", DbType="Int")]
		public System.Nullable<int> teknologiID
		{
			get
			{
				return this._teknologiID;
			}
			set
			{
				if ((this._teknologiID != value))
				{
					if (this._Teknologi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnteknologiIDChanging(value);
					this.SendPropertyChanging();
					this._teknologiID = value;
					this.SendPropertyChanged("teknologiID");
					this.OnteknologiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kodesprogID", DbType="Int")]
		public System.Nullable<int> kodesprogID
		{
			get
			{
				return this._kodesprogID;
			}
			set
			{
				if ((this._kodesprogID != value))
				{
					if (this._KodeSprog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkodesprogIDChanging(value);
					this.SendPropertyChanging();
					this._kodesprogID = value;
					this.SendPropertyChanged("kodesprogID");
					this.OnkodesprogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="specifikationer_konsulent", Storage="_konsulents", ThisKey="SpecifikationerID", OtherKey="SpecifikationerID")]
		public EntitySet<konsulent> konsulents
		{
			get
			{
				return this._konsulents;
			}
			set
			{
				this._konsulents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EkspertiseOmråde_specifikationer", Storage="_EkspertiseOmråde", ThisKey="ekspertiseområdeID", OtherKey="EkspertiseOmrådeId", IsForeignKey=true)]
		public EkspertiseOmråde EkspertiseOmråde
		{
			get
			{
				return this._EkspertiseOmråde.Entity;
			}
			set
			{
				EkspertiseOmråde previousValue = this._EkspertiseOmråde.Entity;
				if (((previousValue != value) 
							|| (this._EkspertiseOmråde.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EkspertiseOmråde.Entity = null;
						previousValue.specifikationers.Remove(this);
					}
					this._EkspertiseOmråde.Entity = value;
					if ((value != null))
					{
						value.specifikationers.Add(this);
						this._ekspertiseområdeID = value.EkspertiseOmrådeId;
					}
					else
					{
						this._ekspertiseområdeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EkspertiseOmråde");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KodeSprog_specifikationer", Storage="_KodeSprog", ThisKey="kodesprogID", OtherKey="KodeSprogID", IsForeignKey=true)]
		public KodeSprog KodeSprog
		{
			get
			{
				return this._KodeSprog.Entity;
			}
			set
			{
				KodeSprog previousValue = this._KodeSprog.Entity;
				if (((previousValue != value) 
							|| (this._KodeSprog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KodeSprog.Entity = null;
						previousValue.specifikationers.Remove(this);
					}
					this._KodeSprog.Entity = value;
					if ((value != null))
					{
						value.specifikationers.Add(this);
						this._kodesprogID = value.KodeSprogID;
					}
					else
					{
						this._kodesprogID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KodeSprog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teknologi_specifikationer", Storage="_Teknologi", ThisKey="teknologiID", OtherKey="TeknologiID", IsForeignKey=true)]
		public Teknologi Teknologi
		{
			get
			{
				return this._Teknologi.Entity;
			}
			set
			{
				Teknologi previousValue = this._Teknologi.Entity;
				if (((previousValue != value) 
							|| (this._Teknologi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teknologi.Entity = null;
						previousValue.specifikationers.Remove(this);
					}
					this._Teknologi.Entity = value;
					if ((value != null))
					{
						value.specifikationers.Add(this);
						this._teknologiID = value.TeknologiID;
					}
					else
					{
						this._teknologiID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teknologi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_konsulents(konsulent entity)
		{
			this.SendPropertyChanging();
			entity.specifikationer = this;
		}
		
		private void detach_konsulents(konsulent entity)
		{
			this.SendPropertyChanging();
			entity.specifikationer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysdiagrams")]
	public partial class sysdiagram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private int _principal_id;
		
		private int _diagram_id;
		
		private System.Nullable<int> _version;
		
		private System.Data.Linq.Binary _definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onprincipal_idChanging(int value);
    partial void Onprincipal_idChanged();
    partial void Ondiagram_idChanging(int value);
    partial void Ondiagram_idChanged();
    partial void OnversionChanging(System.Nullable<int> value);
    partial void OnversionChanged();
    partial void OndefinitionChanging(System.Data.Linq.Binary value);
    partial void OndefinitionChanged();
    #endregion
		
		public sysdiagram()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_principal_id", DbType="Int NOT NULL")]
		public int principal_id
		{
			get
			{
				return this._principal_id;
			}
			set
			{
				if ((this._principal_id != value))
				{
					this.Onprincipal_idChanging(value);
					this.SendPropertyChanging();
					this._principal_id = value;
					this.SendPropertyChanged("principal_id");
					this.Onprincipal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagram_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int diagram_id
		{
			get
			{
				return this._diagram_id;
			}
			set
			{
				if ((this._diagram_id != value))
				{
					this.Ondiagram_idChanging(value);
					this.SendPropertyChanging();
					this._diagram_id = value;
					this.SendPropertyChanged("diagram_id");
					this.Ondiagram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int")]
		public System.Nullable<int> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_definition", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary definition
		{
			get
			{
				return this._definition;
			}
			set
			{
				if ((this._definition != value))
				{
					this.OndefinitionChanging(value);
					this.SendPropertyChanging();
					this._definition = value;
					this.SendPropertyChanged("definition");
					this.OndefinitionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teknologi")]
	public partial class Teknologi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeknologiID;
		
		private string _teknologier;
		
		private EntitySet<specifikationer> _specifikationers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeknologiIDChanging(int value);
    partial void OnTeknologiIDChanged();
    partial void OnteknologierChanging(string value);
    partial void OnteknologierChanged();
    #endregion
		
		public Teknologi()
		{
			this._specifikationers = new EntitySet<specifikationer>(new Action<specifikationer>(this.attach_specifikationers), new Action<specifikationer>(this.detach_specifikationers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeknologiID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TeknologiID
		{
			get
			{
				return this._TeknologiID;
			}
			set
			{
				if ((this._TeknologiID != value))
				{
					this.OnTeknologiIDChanging(value);
					this.SendPropertyChanging();
					this._TeknologiID = value;
					this.SendPropertyChanged("TeknologiID");
					this.OnTeknologiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teknologier", DbType="VarChar(MAX)")]
		public string teknologier
		{
			get
			{
				return this._teknologier;
			}
			set
			{
				if ((this._teknologier != value))
				{
					this.OnteknologierChanging(value);
					this.SendPropertyChanging();
					this._teknologier = value;
					this.SendPropertyChanged("teknologier");
					this.OnteknologierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teknologi_specifikationer", Storage="_specifikationers", ThisKey="TeknologiID", OtherKey="teknologiID")]
		public EntitySet<specifikationer> specifikationers
		{
			get
			{
				return this._specifikationers;
			}
			set
			{
				this._specifikationers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_specifikationers(specifikationer entity)
		{
			this.SendPropertyChanging();
			entity.Teknologi = this;
		}
		
		private void detach_specifikationers(specifikationer entity)
		{
			this.SendPropertyChanging();
			entity.Teknologi = null;
		}
	}
}
#pragma warning restore 1591
